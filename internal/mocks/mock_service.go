// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mocks is a generated GoMock package.
package mocks

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockService is a mock of Service interface.
type MockService struct {
	ctrl     *gomock.Controller
	recorder *MockServiceMockRecorder
}

// MockServiceMockRecorder is the mock recorder for MockService.
type MockServiceMockRecorder struct {
	mock *MockService
}

// NewMockService creates a new mock instance.
func NewMockService(ctrl *gomock.Controller) *MockService {
	mock := &MockService{ctrl: ctrl}
	mock.recorder = &MockServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockService) EXPECT() *MockServiceMockRecorder {
	return m.recorder
}

// GetApiBuyItem mocks base method.
func (m *MockService) GetApiBuyItem(w http.ResponseWriter, r *http.Request, item string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetApiBuyItem", w, r, item)
}

// GetApiBuyItem indicates an expected call of GetApiBuyItem.
func (mr *MockServiceMockRecorder) GetApiBuyItem(w, r, item interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiBuyItem", reflect.TypeOf((*MockService)(nil).GetApiBuyItem), w, r, item)
}

// GetApiInfo mocks base method.
func (m *MockService) GetApiInfo(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetApiInfo", w, r)
}

// GetApiInfo indicates an expected call of GetApiInfo.
func (mr *MockServiceMockRecorder) GetApiInfo(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetApiInfo", reflect.TypeOf((*MockService)(nil).GetApiInfo), w, r)
}

// PostApiAuth mocks base method.
func (m *MockService) PostApiAuth(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PostApiAuth", w, r)
}

// PostApiAuth indicates an expected call of PostApiAuth.
func (mr *MockServiceMockRecorder) PostApiAuth(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostApiAuth", reflect.TypeOf((*MockService)(nil).PostApiAuth), w, r)
}

// PostApiSendCoin mocks base method.
func (m *MockService) PostApiSendCoin(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "PostApiSendCoin", w, r)
}

// PostApiSendCoin indicates an expected call of PostApiSendCoin.
func (mr *MockServiceMockRecorder) PostApiSendCoin(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PostApiSendCoin", reflect.TypeOf((*MockService)(nil).PostApiSendCoin), w, r)
}
